# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices = {
    "crypt-root".device = "/dev/disk/by-uuid/cb461eef-6b4d-46c7-960d-edc686431cdf";
    "crypt-swap".device = "/dev/disk/by-uuid/0dc13346-75ff-417a-a166-8fb5db450dc3";
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/c453bf28-e8f0-49c9-83a2-f61a5a22d163";
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/disk/by-partuuid/5fac0015-9298-4c4e-a880-344277c36f81";
      fsType = "vfat";
      options = [ "fmask=0177" "dmask=0077" ];
    };
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/3129d755-f283-4f76-b379-4b62d3e2570d"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp195s0f4u1u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp192s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
